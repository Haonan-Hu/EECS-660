'''
Put your .py file in the same folder with selfCheck.py and test_files folder,
which means your .py file and Grading.py and test_files folder are at the same level.
Change the file name in the main() with your file name.
'''

import sys
import os
import time
import numpy as np
import matplotlib.pyplot as plt

def read_data(input_file):
    
    file = []
    try:
        lines = input_file.readlines()
        for line in lines:
            temp = list(map(int, line.split(' ')))
            file.append(temp)
    except:
        return file

    return file

def generateResult(executeFile):

    try:
        for i in range(1,7):
            start = time.time()
            execute = f'python3 {executeFile} ./test_files/sm_input_{str(i)}.txt > output_{str(i)}.txt'
            os.system(execute)
            end = time.time()
    except:
        print("Fail to generate")

def diff(test, label):

    Is_True = 1
    if len(test) == len(label):
        for i in range(len(test)):
            if test[i] != label[i]:
                Is_True = 0
                break;
    else:
        Is_True = 0
    return Is_True

def grading(name):
    
    score = 0
    test_files = ["output_1.txt", "output_2.txt", "output_3.txt", "output_4.txt", "output_5.txt", "output_6.txt"]
    label_files = ["sm_output_1.txt", "sm_output_2.txt", "sm_output_3.txt", "sm_output_4.txt", "sm_output_5.txt", "sm_output_6.txt"]
    label_file_path = "./test_files/"

    for i in range(len(test_files)):

        #read output generated by assigment
        test_file = open(test_files[i], 'r')
        test = read_data(test_file)
        test_file.close()
        #read sample output
        label_file = open(label_file_path + label_files[i], 'r')
        label = read_data(label_file)
        label_file.close()
        #grading
        score += diff(test, label)

    print(name[:-3] + ':  ', 100 * score / len(test_files))
 
def main():
    # put your file name here

    executeFile = "median_h192h407.py"
    generateResult(executeFile)
    grading(executeFile)
    

if __name__=="__main__":
    main()
